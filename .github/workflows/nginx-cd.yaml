name: Nginx CD

on:
  workflow_call:

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment: prod
    env:
      NGINX_DIR: /app/product/nginx
      WORKING_DIR: infra/nginx
    permissions:
      id-token: write
      contents: read

    steps:
      - name: Check out repository code
        uses: actions/checkout@v3

      - name: Update repository
        run: git pull

      - name: Generate Nginx config file
        working-directory: infra/nginx/sites-enabled
        env:
          DOMAIN: ${{ secrets.DOMAIN }}
          SERVER_PORT: ${{ vars.SERVER_PORT }}
        run: |
          sed -i "s/{{domain}}/$DOMAIN/g" default.conf
          sed -i "s/{{server_port}}/$SERVER_PORT/g" default.conf

      - name: Create .env file
        working-directory: ${{ env.WORKING_DIR }}
        run: |
          echo "Generating .env file"
          echo "# Autogenerated .env file" > .env
          echo "DOMAIN=${{ secrets.DOMAIN }}" >> .env
          echo "TLS_EMAIL=${{ secrets.TLS_EMAIL }}" >> .env

      - name: copy files to target server via scp
        uses: appleboy/scp-action@v0.1.3
        with:
          host: ${{ secrets.DOMAIN }}
          username: ${{ secrets.SSH_USER }}
          port: 22
          key: ${{ secrets.SSH_KEY }}
          source: "./${{ env.WORKING_DIR }}/"
          target: "~/.deploy/${{ github.event.repository.name }}"

      - name: Building container on server
        uses: appleboy/ssh-action@master
        with:
          debug: true
          host: ${{ secrets.DOMAIN }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_KEY }}
          port: 22
          script: |
            cd ~/.deploy/${{ github.event.repository.name }}/${{ env.WORKING_DIR }}
            docker compose down
            docker compose up -d
            docker system prune -f
