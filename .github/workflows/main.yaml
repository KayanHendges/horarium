name: Main

on:
  push:
    branches:
      - main

concurrency:
  group: entrypoint-workflow
  cancel-in-progress: false

env:
  WEB_DIR: apps/web
  API_DIR: apps/api

jobs:
  changed-contexts:
    uses: ./.github/workflows/changed-contexts.yaml
    secrets: inherit

  bump:
    needs: [changed-contexts]
    runs-on: ubuntu-latest
    timeout-minutes: 15
    permissions:
      contents: write

    steps:
      - name: Check out repository code
        uses: actions/checkout@v3

      - name: Update repository
        run: git pull

      - name: install pnpm
        run: npm install -g pnpm

      - name: Config git
        run: |
          git config --global user.email "${{ github.event.head_commit.committer.email }}"
          git config --global user.name "${{ github.event.head_commit.committer.name }}"

      - name: debug commit message
        run: echo "${{ github.event.head_commit.message }}"

      - name: bump repo
        id: bump-repo
        run: |
          tag=$(pnpm version patch --no-commit-hooks --no-git-tag-version)
          git add . && git commit -m "bump repo: $tag [skip ci]"
          echo "tag=$tag" >> $GITHUB_OUTPUT

      - name: bump web app
        if: needs.changed-contexts.outputs.web == 'true'
        working-directory: ${{ env.WEB_DIR }}
        id: bump-web
        run: |
          tag=$(pnpm version patch --no-commit-hooks --no-git-tag-version)
          git add . && git commit -m "bump web: $tag [skip ci]"
          echo "tag=$tag" >> $GITHUB_OUTPUT

      - name: bump api app
        if: needs.changed-contexts.outputs.api == 'true'
        working-directory: ${{ env.API_DIR }}
        id: bump-api
        run: |
          tag=$(pnpm version patch --no-commit-hooks --no-git-tag-version)
          git add . && git commit -m "bump api: $tag [skip ci]"
          echo "tag=$tag" >> $GITHUB_OUTPUT

      - name: push commits
        run: git push

    outputs:
      repo-tag: ${{ steps.bump-repo.outputs.tag }}
      web-tag: ${{ steps.bump-web.outputs.tag }}
      api-tag: ${{ steps.bump-api.outputs.tag }}

  db-cd:
    needs: [changed-contexts]
    if: needs.changed-contexts.outputs.db == 'true'
    uses: ./.github/workflows/db-cd.yaml
    permissions:
      id-token: write
      contents: read
    secrets: inherit

  api-ci:
    needs: [changed-contexts, bump, db-cd]
    if: |
      always() &&
      !contains(needs.*.result, 'failure') && 
      !contains(needs.*.result, 'cancelled') &&
      needs.changed-contexts.outputs.api == 'true'
    uses: ./.github/workflows/api-ci.yaml
    secrets: inherit
    permissions:
      id-token: write
      contents: read

  api-cd:
    needs: [api-ci]
    uses: ./.github/workflows/api-cd.yaml
    secrets: inherit
    permissions:
      id-token: write
      contents: read

  nginx:
    needs: [changed-contexts, api-cd]
    if: |
      always() &&
      !contains(needs.*.result, 'failure') && 
      !contains(needs.*.result, 'cancelled') &&
      needs.changed-contexts.outputs.nginx == 'true'
    secrets: inherit
    permissions:
      id-token: write
      contents: read
    uses: ./.github/workflows/nginx-cd.yaml

  web-cd:
    needs: [changed-contexts, bump]
    if: needs.changed-contexts.outputs.web == 'true'
    uses: ./.github/workflows/web-cd.yaml
    secrets: inherit
    permissions:
      id-token: write
      contents: read

  release:
    needs: [changed-contexts, bump]
    if: |
      always() &&
      !contains(needs.*.result, 'cancelled')
    runs-on: ubuntu-latest
    timeout-minutes: 15
    permissions:
      id-token: write
      contents: write
    env:
      TEMPLATE_DIR: templates/release.md
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Update repository
        run: git pull

      - name: Create git tag
        run: git tag ${{ needs.bump.outputs.repo-tag }}

      - name: Push tag
        run: git push origin ${{ needs.bump.outputs.repo-tag }}

      - name: Get tags
        id: get-tags
        uses: ./.github/actions/get-tags

      - name: Generate release body
        env:
          WEB_CONTENT: ${{ needs.bump.outputs.web-tag && format('updated to {0}', needs.bump.outputs.web-tag) || format('v{0}', steps.get-tags.outputs.web) }}
          API_CONTENT: ${{ needs.bump.outputs.api-tag && format('updated to {0}', needs.bump.outputs.api-tag) || format('v{0}', steps.get-tags.outputs.api) }}
        run: |
          sed -i "s/{{web_content}}/$WEB_CONTENT/g" ${{ env.TEMPLATE_DIR }}
          sed -i "s/{{api_content}}/$API_CONTENT/g" ${{ env.TEMPLATE_DIR }}

      - name: Create release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ needs.bump.outputs.repo-tag }}
          release_name: ${{ needs.bump.outputs.repo-tag }}
          body_path: ${{ env.TEMPLATE_DIR }}
          draft: false
          prerelease: false
